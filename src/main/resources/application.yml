micronaut:
  application:
    name: variantstore
  server:
    port: ${variantstore-port:8080}
    maxRequestSize: 100
    multipart:
      maxFileSize: 100
    thread-selection: AUTO
  logger:
    levels:
      ROOT: INFO
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
  security:
    enabled: ${variantstore-security-enabled:true}
    intercept-url-map:
      - pattern: /swagger/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /rapidoc/**
        http-method: GET
        access:
          - isAnonymous()
    endpoints:
      login:
        enabled: true
      logout:
        enabled: true
        get-allowed: true
      oauth:
        enabled: true
    session:
      enabled: true
    token:
      jwt:
        enabled: true
    oauth2:
      enabled: ${variantstore-oauth2-enabled:false}
      default-provider: keycloak
      clients:
        keycloak:
          client-id: ${variantstore-oauth2-client-id}
          client-secret: ${variantstore-oauth2-client-secret}
          openid:
            issuer: ${variantstore-oauth2-issuer}
          authorization:
            url: ${variantstore-oauth2-auth-url}
          token:
            url: ${variantstore-oauth2-token-url}
            auth-method: client-secret-jwt
datasources:
  variantstore_postgres:
    url: jdbc:postgresql://${db-host:""}/${db-name:""}
    username: ${db-user:""}
    password: ${db-pwd:""}
    driverClassName: org.postgresql.Driver
    #  dialect: POSTGRES
    #  schema-generate: none
  transactions:
    url: jdbc:postgresql://${db-transaction-host:""}/${db-transaction-name:""}?maxPoolSize=30&pool=true&useServerPrepStmts=false&rewriteBatchedStatements=true
    username: ${db-transaction-user:""}
    password: ${db-transaction-pwd:""}
    driverClassName: org.postgresql.Driver
  #variantstore_mariadb:
  #  url: jdbc:mariadb://${db-host:""}/${db-name:""}?maxPoolSize=30&pool=true&useServerPrepStmts=false&rewriteBatchedStatements=true
  #  username: ${db-user:""}
  #  password: ${db-pwd:""}
  #  driverClassName: org.mariadb.jdbc.Driver
  #transactions_mariadb:
  #  url: jdbc:mariadb://${db-transaction-host:""}/${db-transaction-name:""}?maxPoolSize=30&pool=true&useServerPrepStmts=false&rewriteBatchedStatements=true
  #  username: ${db-transaction-user:""}
  #  password: ${db-transaction-pwd:""}
  #  driverClassName: org.mariadb.jdbc.Driver
database:
  specifier: variantstore-postgres
flyway:
  datasources:
    variantstore_postgres:
      enabled: true
      baselineOnMigrate: true
      locations: classpath:db/postgresql
    transactions:
      enabled: true
      baselineOnMigrate: true
      locations: classpath:db/transactions
    variantstore_mariadb:
      enabled: false
      baselineOnMigrate: true
      locations: classpath:db/mariadb
    transactions_mariadb:
      enabled: false
      baselineOnMigrate: true
      locations: classpath:db/transactions_mariadb
endpoints:
  health:
    enabled: true
    sensitive: false
    details-visible: ANONYMOUS
  routes:
    enabled: true
    sensitive: false
  loggers:
    enabled: true
    sensitive: false
  info:
    enabled: true
    sensitive: false
  flyway:
    enabled: true
    sensitive: false
#userroles:
#  config: ${userrole-config:src/main/resources/test.yml}
